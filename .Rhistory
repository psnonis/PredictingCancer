vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
bSize    <- (vMax-vMin)/10
h        <- hist(v, col=brewer.pal(11,'Spectral'),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
yFit     <- yFit * diff(h$mids[1:2]) * vLen
print( h$mids)
print( diff(h$mids[1:2]))
print( bSize )
print( vBreaks )
lines( xFit, yFit, col = 'blue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
prettyHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
prettyHist(Cancer$deathEst2015, '2015 Cancer Deaths per 100K People')
prettyHist(log(Cancer$deathEst2015), '2015 Cancer Deaths per 100K People')
prettyHist <- function(v,name)
{
vLen     <- length(v)
vMin     <- min(v, na.rm = T)
vMax     <- max(v, na.rm = T)
vBreaks  <- seq(vMin, vMax, length.out = 10)
vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
bSize    <- (vMax-vMin)/10
h        <- hist(v, col=brewer.pal(11,'Spectral'),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
yFit     <- yFit * diff(h$mids[1:2]) * vLen
print( h$mids)
print( diff(h$mids[1:2]))
print( bSize )
print( vBreaks )
curves( xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
prettyHist(Cancer$deathEst2015, '2015 Cancer Deaths per 100K People')
prettyHist <- function(v,name)
{
vLen     <- length(v)
vMin     <- min(v, na.rm = T)
vMax     <- max(v, na.rm = T)
vBreaks  <- seq(vMin, vMax, length.out = 10)
vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
bSize    <- (vMax-vMin)/10
h        <- hist(v, col=brewer.pal(11,'Spectral'),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
yFit     <- yFit * diff(h$mids[1:2]) * vLen
print( h$mids)
print( diff(h$mids[1:2]))
print( bSize )
print( vBreaks )
curve( xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
prettyHist(Cancer$deathEst2015, '2015 Cancer Deaths per 100K People')
?lines(xFit, yFit, col = 'darkblue', lwd = 3)
?abline(v = vMean, col = 'red', lwd = 3, lty = 1)
print(brewer.pal(11,'Spectral'))
prettyHist <- function(v,name)
{
vLen     <- length(v)
vMin     <- min(v, na.rm = T)
vMax     <- max(v, na.rm = T)
vBreaks  <- seq(vMin, vMax, length.out = 12)
vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
h        <- hist(v, col=c("#9E0142","#D53E4F","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#E6F598","#ABDDA4","#66C2A5","#3288BD","#5E4FA2"),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
yFit     <- yFit * diff(h$mids[1:2]) * vLen
lines(xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
prettyHist(Cancer$deathEst2015, '2015 Cancer Deaths per 100K People')
prettyHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
prettyHist <- function(v,name)
{
vLen     <- length(v)
vMin     <- min(v, na.rm = T)
vMax     <- max(v, na.rm = T)
vBreaks  <- seq(vMin, vMax, length.out = 12)
vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
h        <- hist(v, col=c("#9E0142","#D53E4F","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#E6F598","#ABDDA4","#66C2A5","#3288BD","#5E4FA2"),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
xFit     <- seq(vMin, vMax, length.out = 120)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
yFit     <- yFit * diff(h$mids[1:2]) * vLen
lines(xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
prettyHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
prettyHist <- function(v,name)
{
vLen     <- length(v)
vMin     <- min(v, na.rm = T)
vMax     <- max(v, na.rm = T)
vBreaks  <- seq(vMin, vMax, length.out = 10)
vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
h        <- hist(v, col=c("#9E0142","#D53E4F","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#E6F598","#ABDDA4","#66C2A5","#3288BD","#5E4FA2"),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
yFit     <- yFit * diff(h$mids[1:2]) * vLen
lines(xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
prettyHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
boxHist <- function(v,name)
{
vLen     <- length(v)
vMin     <- min(v, na.rm = T)
vMax     <- max(v, na.rm = T)
vBreaks  <- seq(vMin, vMax, length.out = 10)
vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
layout(max = matrix(c(1,2),2,1, byrow=T), height = c(1,8))
par(mar=c(0, 3.1, 1.1, 2.1))
boxplot(v, horizontal = T, ylim = c(-10,20), xaxt = "n", col = rgb("#5E4FA2"), frame = F)
par(mar=c(4, 3.1, 1.1, 2.1))
h        <- hist(v, col=c("#9E0142","#D53E4F","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#E6F598","#ABDDA4","#66C2A5","#3288BD","#5E4FA2"),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
yFit     <- yFit * diff(h$mids[1:2]) * vLen
lines(xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
boxHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
boxHist <- function(v,name)
{
vLen     <- length(v)
vMin     <- min(v, na.rm = T)
vMax     <- max(v, na.rm = T)
vBreaks  <- seq(vMin, vMax, length.out = 10)
vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
layout(mat = matrix(c(1,2),2,1, byrow=T), height = c(1,8))
par(mar=c(0, 3.1, 1.1, 2.1))
boxplot(v, horizontal = T, ylim = c(-10,20), xaxt = "n", col = rgb("#5E4FA2"), frame = F)
par(mar=c(4, 3.1, 1.1, 2.1))
h        <- hist(v, col=c("#9E0142","#D53E4F","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#E6F598","#ABDDA4","#66C2A5","#3288BD","#5E4FA2"),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
yFit     <- yFit * diff(h$mids[1:2]) * vLen
lines(xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
boxHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
boxHist <- function(v,name)
{
vLen     <- length(v)
vMin     <- min(v, na.rm = T)
vMax     <- max(v, na.rm = T)
vBreaks  <- seq(vMin, vMax, length.out = 10)
vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
layout(mat = matrix(c(1,2),2,1, byrow=T), height = c(1,8))
par(mar=c(0, 3.1, 1.1, 2.1))
boxplot(v, horizontal = T, ylim = c(-10,20), xaxt = "n", col ="#5E4FA2", frame = F)
par(mar=c(4, 3.1, 1.1, 2.1))
h        <- hist(v, col=c("#9E0142","#D53E4F","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#E6F598","#ABDDA4","#66C2A5","#3288BD","#5E4FA2"),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
yFit     <- yFit * diff(h$mids[1:2]) * vLen
lines(xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
boxHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
boxplot(Cancer$deathRate, horizontal = T)
boxplot(Cancer$deathRate, horizontal = T, ylim = c(-10,20), xaxt = "n", col ="#5E4FA2", frame = F)
boxHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
boxplot(Cancer$deathRate, horizontal = T, ylim = c(-10,20), xaxt = "n", col ="#5E4FA2", frame = F)
boxHist <- function(v,name)
{
vLen     <- length(v)
vMin     <- min(v, na.rm = T)
vMax     <- max(v, na.rm = T)
vBreaks  <- seq(vMin, vMax, length.out = 10)
vMean    <- mean(v, na.rm = T)
vMedian  <- median(v, na.rm = T)
vSD      <- sd(v)
layout(mat = matrix(c(1,2),2,1, byrow=T), height = c(1,8))
par(mar=c(0, 3.1, 1.1, 2.1))
boxplot(v, horizontal = T, xaxt = "n", col ="#5E4FA2", frame = F)
par(mar=c(4, 3.1, 1.1, 2.1))
h        <- hist(v, col=c("#9E0142","#D53E4F","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#E6F598","#ABDDA4","#66C2A5","#3288BD","#5E4FA2"),
breaks = vBreaks,
main = sprintf( '%s', name),
labels = T )
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
yFit     <- yFit * diff(h$mids[1:2]) * vLen
lines(xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
boxHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
boxHist <- function(v,name)
{
vLen    <- length(v)
vMin    <- min(v, na.rm = T)
vMax    <- max(v, na.rm = T)
vBreaks <- seq(vMin, vMax, length.out = 10)
vMean   <- mean(v, na.rm = T)
vMedian <- median(v, na.rm = T)
vSD     <- sd(v)
l       <- layout(mat = matrix(c(1,2),2,1, byrow=T), height = c(1,8))
p       <- par(mar = c(0, 3.1, 1.1, 2.1))
b       <- boxplot(v, horizontal = T, xaxt = 'n', col ='#5E4FA2', frame = F)
par(mar=c(4, 3.1, 1.1, 2.1))
h        <- hist(v, col = c('#9E0142','#D53E4F','#F46D43','#FDAE61','#FEE08B','#FFFFBF','#E6F598','#ABDDA4','#66C2A5','#3288BD','#5E4FA2'),
breaks = vBreaks,
xlab = name,
labels = T )
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
yFit     <- yFit * diff(h$mids[1:2]) * vLen
lines(xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
boxHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
boxHist <- function(v,name)
{
vLen    <- length(v)
vMin    <- min(v, na.rm = T)
vMax    <- max(v, na.rm = T)
vBreaks <- seq(vMin, vMax, length.out = 10)
vMean   <- mean(v, na.rm = T)
vMedian <- median(v, na.rm = T)
vSD     <- sd(v)
l       <- layout(mat = matrix(c(1,2),2,1, byrow=T), height = c(1,8))
p       <- par(mar = c(0, 3.1, 1.1, 2.1))
b       <- boxplot(v, horizontal = T, xaxt = 'n', col ='#5E4FA2', frame = F)
par(mar=c(4, 3.1, 1.1, 2.1))
h        <- hist(v, col = c('#9E0142','#D53E4F','#F46D43','#FDAE61','#FEE08B','#FFFFBF','#E6F598','#ABDDA4','#66C2A5','#3288BD','#5E4FA2'),
breaks = vBreaks,
main = NA,
xlab = name,
labels = T )
xFit     <- seq(vMin, vMax, length.out = 100)
yFit     <- dnorm(xFit, mean = vMean, sd = vSD)
yFit     <- yFit * diff(h$mids[1:2]) * vLen
lines(xFit, yFit, col = 'darkblue', lwd = 3)
abline(v = vMean, col = 'red', lwd = 3, lty = 1)
abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
boxHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
boxHist <- function(v,name)
{
vLen    <- length(v)
vMin    <- min(v, na.rm = T)
vMax    <- max(v, na.rm = T)
vBreaks <- seq(vMin, vMax, length.out = 10)
vMean   <- mean(v, na.rm = T)
vMedian <- median(v, na.rm = T)
vSD     <- sd(v)
l <- layout(mat = matrix(c(1,2),2,1, byrow=T), height = c(1,8))
p <- par(mar = c(0, 3.1, 1.1, 2.1))
b <- boxplot(v, horizontal = T, xaxt = 'n', col ='#5E4FA2', frame = F)
p <- par(mar=c(4, 3.1, 1.1, 2.1))
h <- hist(v, col = c('#9E0142','#D53E4F','#F46D43','#FDAE61','#FEE08B','#FFFFBF','#E6F598','#ABDDA4','#66C2A5','#3288BD','#5E4FA2'),
breaks = vBreaks,
main = NA,
xlab = name,
labels = T )
xFit <- seq(vMin, vMax, length.out = 100)
yFit <- dnorm(xFit, mean = vMean, sd = vSD)
yFit <- yFit * diff(h$mids[1:2]) * vLen
x <- lines(xFit, yFit, col = 'darkblue', lwd = 3)
x <- abline(v = vMean, col = 'red', lwd = 3, lty = 1)
x <- abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
boxHist(Cancer$deathRate, '2015 Cancer Deaths per 100K People')
boxHist(Cancer$medIncome, '2015 Cancer Deaths per 100K People')
summary(Cancer$medIncome)
plotcorr(Cancer[,c('deathRate','medIncome')])
corr(Cancer[,c('deathRate','medIncome')])
cor(Cancer[,c('deathRate','medIncome')])
cor(Cancer[,c('deathRate','medIncome','poverty')])
cor(Cancer[,c('deathRate','medIncome','povertyPercent')])
plot(cor(Cancer[,c('deathRate','medIncome','povertyPercent')]))
corrplot(cor(Cancer[,c('deathRate','medIncome','povertyPercent')]))
plotcorr
library(ellipse)
set.seed(070510)
d <- data.frame(x = rnorm(2000))
ggplot(d, aes(x)) +
geom_histogram()
ggplot(d, aes(x, fill = cut(x, 100))) +
geom_histogram()
ggplot(d, aes(x, fill = cut(x, 100))) +
geom_histogram(show.legend = FALSE)
p <- ggplot(d, aes(x, fill = cut(x, 100))) +
geom_histogram(show.legend = FALSE) +
theme_minimal() +
labs(x = "Variable X", y = "n") +
ggtitle("Histogram of X")
p + scale_fill_discrete(h = c(180, 360), c = 150, l = 80)
Cancer$cancerRate <- Cancer$avgAnnCount / Cancer$popEst2015
plot(Cancer$cancerRate)
summary(Cancer$canderRate)
summary(Cancer$cancerRate)
Cancer[Cancer$avgAnnCount>Cancer$popEst2015,c('X')]
rownames(Cancer)[Cancer$avgAnnCount>Cancer$popEst2015,]
rownames(Cancer)[Cancer$avgAnnCount>Cancer$popEst2015]
Cancer$avgAnnCount/Cancer$popEst2015
median(Cancer$avgAnnCount/Cancer$popEst2015)
median(Cancer$avgAnnCount/Cancer$popEst2015) * 100
mean(Cancer$avgAnnCount/Cancer$popEst2015) * 100
sd(Cancer$avgAnnCount/Cancer$popEst2015)
boxHist(Cancer$avgAnnCount/Cancer$popEst2015,'')
boxHist(Cancer$avgAnnCount/Cancer$popEst2015 * 100,'')
Cancer$avgAnnCount/Cancer$popEst2015 * 100 > 2
Cancer[Cancer$avgAnnCount/Cancer$popEst2015 * 100 > 2,]
median(Cancer$avgAnnCount/Cancer$popEst2015) * 100
Cancer$incidentPercent <- Cancer$avgAnnCount / Cancer$popEst2015
Cancer$incidentPercent > 0.5
which(Cancer$incidentPercent > 0.5)
length(which(Cancer$incidentPercent > 0.5))
rownames(Cancer)[Cancer$avgAnnCount>Cancer$popEst2015]
length(which(Cancer$incidentPercent > median(incidentPercent)))
length(which(Cancer$incidentPercent > median(Cancer$incidentPercent)))
Cancer$incidentPercent <- Cancer$avgAnnCount / Cancer$popEst2015 * 100
length(which(Cancer$incidentPercent > median(Cancer$incidentPercent)))
quantile(Cancer$incidentPercent)
IQR(Cancer$incidentPercent)
IQR(Cancer$incidentPercent) * 1.5
q <- quantile(Cancer$incidentPercent, probs = c(0.25, 0.75))
q[1] - IQR(Cancer$incidentPercent) * 1.5
q[2] - IQR(Cancer$incidentPercent) * 1.5
boxplot.stats(Cancer$incidentPercent)
boxplot.stats(Cancer$incidentPercent)$out
Cancer$incidentPercent[!Cancer$incidentPercent %in% boxplot.stats(Cancer$incidentPercent)$out]
boxHist(Cancer$incidentPercent[!Cancer$incidentPercent %in% boxplot.stats(Cancer$incidentPercent)$out],"")
boxHist(Cancer$incidentPercent[!Cancer$incidentPercent %in% boxplot.stats(Cancer$incidentPercent)$out],"Cancer Incident as Percentage of Population")
Cancer$deathPercent <- Cancer$deathEst2015 / Cancer$popEst2015 * 100
boxHist( Cancer$deathPercent, "")
dropOut <- function(v)
{
return v[!v %in% boxplot.stats(v)$out]
}
boxHist(dropOut(Cancer$incidentPercent), "")
library(corrplot)
Cancer$avgAnnCount==1962.668
Cancer[Cancer$avgAnnCount==1962.668]
Cancer[Cancer$avgAnnCount==1962.668,]$avgAnnCount <- NA
Cancer[Cancer$avgAnnCount==1962.668,]$avgAnnCount
Cancer$avgAnnCount[Cancer$avgAnnCount==1962.668] <- NA
Cancer$incidentPercent <- Cancer$avgAnnCount / Cancer$popEst2015 * 100
boxHist( Cancer$incidentPercent, "")
plot(Cancer$incidentPercent)
dropOut <- function(v)
{
return (v[!v %in% boxplot.stats(v)$out])
}
dropOut( Cancer$incidentPercent )
boxHist <- function(v,name = 'Variable')
{
vLen    <- length(v)
vMin    <- min(v, na.rm = T)
vMax    <- max(v, na.rm = T)
vBreaks <- seq(vMin, vMax, length.out = 10)
vMean   <- mean(v, na.rm = T)
vMedian <- median(v, na.rm = T)
vSD     <- sd(v)
l <- layout(mat = matrix(c(1,2),2,1, byrow=T), height = c(1,8))
p <- par(mar = c(0, 3.1, 1.1, 2.1))
b <- boxplot(v, horizontal = T, xaxt = 'n', col ='#5E4FA2', frame = F)
p <- par(mar=c(4, 3.1, 1.1, 2.1))
h <- hist(v, col = c('#9E0142','#D53E4F','#F46D43','#FDAE61','#FEE08B','#FFFFBF','#E6F598','#ABDDA4','#66C2A5','#3288BD','#5E4FA2'),
breaks = vBreaks,
main = NA,
xlab = name,
labels = T )
xFit <- seq(vMin, vMax, length.out = 100)
yFit <- dnorm(xFit, mean = vMean, sd = vSD)
yFit <- yFit * diff(h$mids[1:2]) * vLen
x <- lines(xFit, yFit, col = 'darkblue', lwd = 3)
x <- abline(v = vMean, col = 'red', lwd = 3, lty = 1)
x <- abline(v = vMedian, col = 'red', lwd = 3, lty = 2)
}
boxHist(dropOut( Cancer$incidentPercent ))
Cancer$avgAnnCount[avgAnnCount==1962.668]
Cancer$avgAnnCount[Cancer$avgAnnCount==1962.668]
Cancer$avgAnnCount[Cancer$avgAnnCount==1962.668]<- NA
Cancer$deathPercent2015 <- Cancer$deathEst2015 / Cancer$avgAnnCount * 100
Cancer <- read.csv('cancer.csv', header = T, as.is = T, row.names = 1)
names(Cancer)
library(tidyverse)
CShape <- read_rds('cshape.Rds') # read county geometries
CShape$Geography <- sprintf("%s, %s", CShape$county_name, CShape$state_name)
CanMap <- left_join(Cancer, CShape, by = 'Geography')
CanMap %>%
filter(state %in% c('NV')) %>%
ggplot(aes(lon, lat, group = group, fill = deathRate)) +
geom_polygon(color = NA, size = 0.05) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45)
CanMap %>%
ggplot(aes(lon, lat, group = group, fill = BirthRate)) +
geom_polygon(color = NA, size = 0.05) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
Cancer$incidenceRate <- Cancer$avgAnnCount/Cancer$popEst2015*100000
?par
matrix(c(1, 2), 2, 1, byrow = T)
?layout
barplot(c(1.1, 0.8, 0.7), horiz=TRUE, border="blue", axes=FALSE, col="darkblue")
axis(2, at=1:3, lab=c("elephant", "hippo", "snorkel"), las=1, cex.axis=1.3)
par(mar=c(5,6,4,1)+.1)
barplot(c(1.1, 0.8, 0.7), horiz=TRUE, border="blue", axes=FALSE, col="darkblue")
axis(2, at=1:3, lab=c("elephant", "hippo", "snorkel"), las=1, cex.axis=1.3)
?hist
plot(1:12, type = "b", main = "'fg' : axes, ticks and box in gray",
fg = gray(0.7), bty = "7" , sub = R.version.string)
?cor
?corrplot
CancerNUM <- Cancer[, !names(Cancer) %in% c('Geography', 'binnedInc')]
CancerCOR <- cor(CancerNUM, use = 'complete.obs')
CancerCOR
corrplot( CancerCOR, method = 'ellipse', font = 1 )
options(digits = 6)
CancerNUM <- Cancer[, !names(Cancer) %in% c('Geography', 'binnedInc')]
CancerCOR <- cor(CancerNUM, use = 'complete.obs')
CancerCOR
corrplot( CancerCOR, method = 'ellipse', font = 1 )
CancerNUM <- Cancer[, !names(Cancer) %in% c('Geography', 'binnedInc')]
CancerCOR <- cor(CancerNUM, use = 'complete.obs')
round(CancerCOR,2)
corrplot( CancerCOR, method = 'ellipse', font = 1 )
Cancer$avgAnnCount[Cancer$avgAnnCount==1962.668] <- NA
CancerNUM <- Cancer[, !names(Cancer) %in% c('Geography', 'binnedInc')]
CancerCOR <- cor(CancerNUM, use = 'complete.obs')
round(CancerCOR,2)
corrplot( CancerCOR, method = 'ellipse', font = 1 )
plot(Cancer$incidenceRate,Cancer$deathRate)
plot(log(Cancer$incidenceRate),Cancer$deathRate)
plot(log(Cancer$incidenceRate),log(Cancer$deathRate))
plot(log(Cancer$incidenceRate)~log(Cancer$deathRate))
plot(Cancer$incidenceRate~Cancer$deathRate)
plot(Cancer$deathRate~Cancer$incidenceRate)
?plot(Cancer$deathRate~Cancer$incidenceRate)
scatter(Cancer$deathRate~Cancer$incidenceRate)
plot(log(Cancer$deathRate~Cancer$incidenceRate))
plot(log(Cancer$deathRate)~Cancer$incidenceRate))
abline(lm(Cancer$deathRate~Cancer$incidenceRate))
plot(log(Cancer$deathRate)~log(Cancer$incidenceRate))
abline(lm(Cancer$deathRate~Cancer$incidenceRate))
abline(lm(log(Cancer$deathRate)~log(Cancer$incidenceRate)))
plot(Cancer$deathRate~Cancer$incidenceRate)
Cancer$incidenceRate>Cancer$popEst2015
which(Cancer$incidenceRate>Cancer$popEst2015)
length(which(Cancer$incidenceRate>Cancer$popEst2015))
Cancer$deathsPerIncidence <- Cancer$deathRate / Cancer$incidenceRate
median(Cancer$deathsPerIncidence)
median(dropOut(Cancer$deathsPerIncidence))
summary(dropOut(Cancer$deathsPerIncidence))
summary(Cancer$deathsPerIncidence)
plot(Cancer$deathPerIncidence)
plot(Cancer$deathsPerIncidence)
plot(Cancer$deathRate)
plot(Cancer$incidenceRate)
0.001 * 0.95
* 100
0.001 * 0.95 * 100
